@page "/rank"
@page "/"

@using RankMonkey.Client.Services
@using RankMonkey.Client.Pages

@inject HttpClient Http
@inject ILogger<Ranking> Logger
@inject CustomAuthStateProvider AuthStateProvider

<div class="container mt-4">
    @if (userName != string.Empty)
    {
        <h1 class="mb-4">Welcome, @userName!</h1>
    }

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-4">Please enter your information to see where you stand:</h5>

                    <EditForm Model="@model" OnValidSubmit="SubmitMetrics" class="mb-4">
                        <DataAnnotationsValidator/>
                        <ValidationSummary/>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="currency" class="form-label">Currency</label>
                                <InputSelect id="currency" @bind-Value="model.Currency" class="form-select">
                                    <option value="INR">INR</option>
                                    <option value="USD">USD</option>
                                </InputSelect>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="income" class="form-label">Annual Income (@GetCurrencySymbol())</label>
                                <InputNumber id="income" @bind-Value="model.Income" class="form-control"/>
                                <ValidationMessage For="@(() => model.Income)" class="text-danger"/>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="netWorth" class="form-label">Net Worth (@GetCurrencySymbol())</label>
                                <InputNumber id="netWorth" @bind-Value="model.NetWorth" class="form-control"/>
                                <ValidationMessage For="@(() => model.NetWorth)" class="text-danger"/>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Submit</button>
                    </EditForm>
                </div>
            </div>

            @if (ranking != null)
            {
                <div class="card mt-4">
                    <div class="card-body">
                        <h5 class="card-title">Your Rankings</h5>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Your income is more than
                                <span class="badge bg-primary rounded-pill">@FormatPercentile(ranking.IncomePercentile)</span>
                                of the users
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Your net worth is more than
                                <span class="badge bg-primary rounded-pill">@FormatPercentile(ranking.NetWorthPercentile)</span>
                                of the users
                            </li>
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
</div>