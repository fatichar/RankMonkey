@using RankMonkey.Client.Services
@inherits LayoutComponentBase
@inject IHttpClientFactory HttpClientFactory
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="page">
    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <button class="btn btn-link" @onclick="Logout">Logout</button>
                </Authorized>
                <NotAuthorized>
                    <a href="login">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    protected override void OnInitialized()
    {
        AuthStateProvider.AuthenticationStateChanged += AuthenticationStateProvider_AuthenticationStateChanged;
    }

    private void AuthenticationStateProvider_AuthenticationStateChanged(Task<AuthenticationState> task)
    {
        InvokeAsync(StateHasChanged);
    }

    private async Task Logout()
    {
        var client = HttpClientFactory.CreateClient("ServerAPI");
        await client.PostAsync("api/auth/logout", null);
        await AuthStateProvider.MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("/login");
    }

    public void Dispose()
    {
        AuthStateProvider.AuthenticationStateChanged -= AuthenticationStateProvider_AuthenticationStateChanged;
    }
}